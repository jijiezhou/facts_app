{"ast":null,"code":"'use strict';\n\nvar SLOT = require('internal-slot');\nvar $SyntaxError = SyntaxError;\nvar $StopIteration = typeof StopIteration === 'object' ? StopIteration : null;\nmodule.exports = function getStopIterationIterator(origIterator) {\n  if (!$StopIteration) {\n    throw new $SyntaxError('this environment lacks StopIteration');\n  }\n  SLOT.set(origIterator, '[[Done]]', false);\n  var siIterator = {\n    next: function next() {\n      var iterator = SLOT.get(this, '[[Iterator]]');\n      var done = SLOT.get(iterator, '[[Done]]');\n      try {\n        return {\n          done: done,\n          value: done ? void undefined : iterator.next()\n        };\n      } catch (e) {\n        SLOT.set(iterator, '[[Done]]', true);\n        if (e !== $StopIteration) {\n          throw e;\n        }\n        return {\n          done: true,\n          value: void undefined\n        };\n      }\n    }\n  };\n  SLOT.set(siIterator, '[[Iterator]]', origIterator);\n  return siIterator;\n};","map":null,"metadata":{},"sourceType":"script"}