{"ast":null,"code":"import { supportsLocalStorage } from './helpers';\n/**\n * Provides safe access to the globalThis.localStorage property.\n */\nexport var localStorageAdapter = {\n  getItem: function getItem(key) {\n    if (!supportsLocalStorage()) {\n      return null;\n    }\n    return globalThis.localStorage.getItem(key);\n  },\n  setItem: function setItem(key, value) {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    globalThis.localStorage.setItem(key, value);\n  },\n  removeItem: function removeItem(key) {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    globalThis.localStorage.removeItem(key);\n  }\n};\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter() {\n  var store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    getItem: function getItem(key) {\n      return store[key] || null;\n    },\n    setItem: function setItem(key, value) {\n      store[key] = value;\n    },\n    removeItem: function removeItem(key) {\n      delete store[key];\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}